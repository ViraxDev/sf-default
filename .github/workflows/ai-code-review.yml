name: AI Code Review with Fixed API Test and Variable Definition
on: [pull_request]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install anthropic requests

      - name: AI Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python <<EOF
          import os
          import sys
          import requests
          from anthropic import Anthropic

          def log(message):
              print(f"DEBUG: {message}")
              sys.stdout.flush()

          log("Starting AI Code Review")

          api_key = os.environ['ANTHROPIC_API_KEY']
          anthropic = Anthropic(api_key=api_key)
          
          log(f"Anthropic API Key (first 5 chars): {api_key[:5]}...")

          # Test API connection
          try:
              headers = {
                  "x-api-key": api_key,
                  "content-type": "application/json"
              }
              response = requests.get("https://api.anthropic.com/v1/messages", headers=headers)
              log(f"API connection test status: {response.status_code}")
              log(f"API response: {response.text[:100]}...")  # Log first 100 characters of response
          except Exception as e:
              log(f"Error testing API connection: {str(e)}")

          # Define changed_files
          changed_files = "${{ steps.changed-files.outputs.all_changed_files }}".split()
          log(f"Changed files: {changed_files}")

          for file in changed_files:
              log(f"Reviewing file: {file}")
              try:
                  with open(file, 'r') as f:
                      content = f.read()
              except Exception as e:
                  log(f"Error reading file {file}: {str(e)}")
                  continue

              prompt = f"""You are an AI code reviewer. Review the following file: {file}

              Here's the content:
              {content}

              Please provide a thorough code review, considering:
              1. Code quality and best practices
              2. Potential bugs or issues
              3. Performance considerations
              4. How well it fits with the overall project structure
              5. Suggestions for improvement

              Format your review as markdown bullet points."""

              log("Sending request to Anthropic API")
              try:
                  response = anthropic.messages.create(
                      model="claude-3-sonnet-20240229",
                      max_tokens=2000,
                      messages=[{"role": "user", "content": prompt}]
                  )
                  log("Received response from Anthropic API")
                  log(f"Response status: {response.status}")
                  log(f"Response content (first 100 chars): {str(response.content)[:100]}...")
                  review = response.content[0].text
              except Exception as e:
                  log(f"Error calling Anthropic API: {str(e)}")
                  log(f"Error type: {type(e).__name__}")
                  if hasattr(e, 'response'):
                      log(f"Response status code: {e.response.status_code}")
                      log(f"Response content: {e.response.text}")
                  continue

              log("Posting comment to GitHub")
              comment_command = f'gh pr comment ${{ github.event.pull_request.number }} --body "AI Review for {file}:\n{review}"'
              result = os.system(comment_command)
              if result != 0:
                  log(f"Error posting comment to GitHub. Exit code: {result}")
              else:
                  log("Comment posted successfully")

          log("AI Code Review completed")
          EOF