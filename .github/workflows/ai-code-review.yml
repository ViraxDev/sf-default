name: Contextual AI Code Review
on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'Pull Request number to review'
        required: true

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install anthropic requests
          sudo apt-get install -y gh jq

      - name: AI Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.inputs.pr_number }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          python3 <<EOF
          import os
          import sys
          import subprocess
          import json
          import base64
          import requests
          from anthropic import Anthropic

          def log(message):
              print(f"DEBUG: {message}")
              sys.stdout.flush()

          def run_command(command):
              try:
                  result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
                  return result.stdout.strip()
              except subprocess.CalledProcessError as e:
                  log(f"Error executing command: {e}")
                  log(f"Command output: {e.output}")
                  return None

          def post_review_comment(repo, pr_number, body, path, position):
              url = f"https://api.github.com/repos/{repo}/pulls/{pr_number}/comments"
              headers = {
                  "Authorization": f"token {os.environ['GITHUB_TOKEN']}",
                  "Accept": "application/vnd.github.v3+json"
              }
              data = {
                  "body": body,
                  "path": path,
                  "position": position
              }
              response = requests.post(url, headers=headers, json=data)
              if response.status_code == 201:
                  log("Review comment posted successfully")
              else:
                  log(f"Error posting review comment. Status code: {response.status_code}")
                  log(f"Response content: {response.text}")

          # ... [rest of the script remains the same until the review posting part]

          log("Posting review comment on GitHub")
          post_review_comment(
              repo,
              pr_number,
              review,
              filename,
              file['changes']
          )

          log("Contextual AI Code Review completed")
          EOF