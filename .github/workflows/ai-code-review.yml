name: AI Code Review with Corrected API Handling
on: [pull_request]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install anthropic requests

      - name: AI Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python <<EOF
          import os
          import sys
          import requests
          from anthropic import Anthropic, HUMAN_PROMPT, AI_PROMPT

          def log(message):
              print(f"DEBUG: {message}")
              sys.stdout.flush()

          log("Starting AI Code Review")

          api_key = os.environ['ANTHROPIC_API_KEY']
          anthropic = Anthropic(api_key=api_key)
          
          log(f"Anthropic API Key (first 5 chars): {api_key[:5]}...")

          # Test API connection
          try:
              response = anthropic.completions.create(
                  model="claude-3-opus-20240229",
                  max_tokens_to_sample=10,
                  prompt=f"{HUMAN_PROMPT}Say hello!{AI_PROMPT}"
              )
              log(f"API connection test successful. Response: {response.completion}")
          except Exception as e:
              log(f"Error testing API connection: {str(e)}")

          # Define changed_files
          changed_files = "${{ steps.changed-files.outputs.all_changed_files }}".split()
          log(f"Changed files: {changed_files}")

          for file in changed_files:
              log(f"Reviewing file: {file}")
              try:
                  with open(file, 'r') as f:
                      content = f.read()
              except Exception as e:
                  log(f"Error reading file {file}: {str(e)}")
                  continue

              prompt = f"{HUMAN_PROMPT}You are an AI code reviewer. Review the following file: {file}\n\nHere's the content:\n{content}\n\nPlease provide a thorough code review, considering:\n1. Code quality and best practices\n2. Potential bugs or issues\n3. Performance considerations\n4. How well it fits with the overall project structure\n5. Suggestions for improvement\n\nFormat your review as markdown bullet points.{AI_PROMPT}"

              log("Sending request to Anthropic API")
              try:
                  response = anthropic.completions.create(
                      model="claude-3-opus-20240229",
                      max_tokens_to_sample=2000,
                      prompt=prompt
                  )
                  log("Received response from Anthropic API")
                  log(f"Response content (first 100 chars): {response.completion[:100]}...")
                  review = response.completion
              except Exception as e:
                  log(f"Error calling Anthropic API: {str(e)}")
                  log(f"Error type: {type(e).__name__}")
                  if hasattr(e, 'response'):
                      log(f"Response status code: {e.response.status_code}")
                      log(f"Response content: {e.response.text}")
                  continue

              log("Posting comment to GitHub")
              comment_command = f'gh pr comment ${{ github.event.pull_request.number }} --body "AI Review for {file}:\n{review}"'
              result = os.system(comment_command)
              if result != 0:
                  log(f"Error posting comment to GitHub. Exit code: {result}")
              else:
                  log("Comment posted successfully")

          log("AI Code Review completed")
          EOF