name: AI Code Review of All Files
on: [pull_request]

jobs:
  ai-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install anthropic

      - name: AI Code Review
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python <<EOF
          import os
          import sys
          from anthropic import Anthropic

          def log(message):
              print(f"DEBUG: {message}")
              sys.stdout.flush()

          log("Starting AI Code Review")

          anthropic = Anthropic(api_key=os.environ['ANTHROPIC_API_KEY'])
          
          log(f"Anthropic API Key (first 5 chars): {os.environ['ANTHROPIC_API_KEY'][:5]}...")

          def get_repo_summary():
              summary = "Repository structure:\n"
              for root, dirs, files in os.walk('.'):
                  if '.git' in dirs:
                      dirs.remove('.git')
                  path = root.split(os.sep)
                  summary += (len(path) - 1) * '  ' + os.path.basename(root) + '/\n'
                  for file in files:
                      summary += len(path) * '  ' + file + '\n'
              return summary

          repo_summary = get_repo_summary()
          log("Repository summary generated")

          changed_files = "${{ steps.changed-files.outputs.all_changed_files }}".split()
          log(f"Changed files: {changed_files}")

          for file in changed_files:
              log(f"Reviewing file: {file}")
              try:
                  with open(file, 'r') as f:
                      content = f.read()
              except Exception as e:
                  log(f"Error reading file {file}: {str(e)}")
                  continue

              prompt = f"""You are an AI code reviewer. You have access to the full repository structure.
              Repository summary:
              {repo_summary}

              Now, review the following file: {file}

              Here's the content:
              {content}

              Please provide a thorough code review, considering:
              1. Code quality and best practices
              2. Potential bugs or issues
              3. Performance considerations
              4. How well it fits with the overall project structure
              5. Suggestions for improvement

              Format your review as markdown bullet points."""

              log("Sending request to Anthropic API")
              try:
                  response = anthropic.messages.create(
                      model="claude-3-sonnet-20240229",
                      max_tokens=2000,
                      messages=[{"role": "user", "content": prompt}]
                  )
                  log("Received response from Anthropic API")
                  review = response.content[0].text
              except Exception as e:
                  log(f"Error calling Anthropic API: {str(e)}")
                  continue

              log("Posting comment to GitHub")
              comment_command = f'gh pr comment ${{ github.event.pull_request.number }} --body "AI Review for {file}:\n{review}"'
              result = os.system(comment_command)
              if result != 0:
                  log(f"Error posting comment to GitHub. Exit code: {result}")
              else:
                  log("Comment posted successfully")

          log("AI Code Review completed")
          EOF